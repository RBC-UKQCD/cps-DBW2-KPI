/*
 * Please do not edit this file.
 * It was generated using PAB's VML system.
 */

#ifndef _MUON_ARG_H_RPCGEN
#define _MUON_ARG_H_RPCGEN

#include <config.h>
#include <util/vml/types.h>
#include <util/vml/vml.h>
#include <util/enum.h>
#include <util/defines.h>
CPS_START_NAMESPACE

enum VP_TYPE {
	CONSERVED_LOCAL = 0,
	CONSERVED_LOCAL_LOWMODE = 1,
	CONSERVED_LOCAL_PTSRC_TEST = 2,
	CONSERVED_LOCAL_LOOP_PTSRC = 3,
	CONSERVED_LOCAL_TWISTED = 4,
};
typedef enum VP_TYPE VP_TYPE;
extern struct vml_enum_map VP_TYPE_map[];

class VML;
class MuonArg {
public:
	 bool Encode(char *filename,char *instance);
	 bool Decode(char *filename,char *instance);
	 bool Vml(VML *vmls,char *instance);
	u_long u1lat;
	int source_time;
	int oper_time_start;
	int oper_time_end;
	int operator_gamma;
	int x[3];
	int n_source;
	int source_inc;
	Float loop_mass;
	Float line_mass;
	Float charge;
	int GaugeFix;
	int NPROJ;
	Float EPS;
	int XMOM;
	int YMOM;
	int ZMOM;
	int Nmom;
	int MaxMomSq;
	int NConfs;
	int NHITS;
	char *DIRVP;
	char *DIRML;
	char *VPTAG;
	int DO_MUONLINE;
	int DO_VACPOL;
	int tINC;
	int ptStart;
	int ptINC;
	int conf;
	VP_TYPE vp_kind;
	char *EIGTAG;
	   MuonArg (  ) ;
};

/* the xdr functions */

#ifdef __cplusplus
extern "C" {
#endif

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t vml_VP_TYPE (VML *, char *instance, VP_TYPE*);
extern  bool_t vml_MuonArg (VML *, char *instance, MuonArg*);

#else /* K&R C */
extern  bool_t vml_VP_TYPE (VML *, char *instance, VP_TYPE*);
extern  bool_t vml_MuonArg (VML *, char *instance, MuonArg*);

#endif /* K&R C */

#ifdef __cplusplus
}
#endif
CPS_END_NAMESPACE

#endif /* !_MUON_ARG_H_RPCGEN */
