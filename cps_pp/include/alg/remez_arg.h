/*
 * Please do not edit this file.
 * It was generated using PAB's VML system.
 */

#ifndef _REMEZ_ARG_H_RPCGEN
#define _REMEZ_ARG_H_RPCGEN

#include <config.h>
#include <util/vml/types.h>
#include <util/vml/vml.h>
#include <util/enum.h>
#include <util/defines.h>
CPS_START_NAMESPACE

class VML;
class RemezArg {
public:
	 bool Encode(char *filename,char *instance);
	 bool Decode(char *filename,char *instance);
	 bool Vml(VML *vmls,char *instance);
	RationalApproxType approx_type;
	int valid_approx;
	int degree;
	Float lambda_low;
	Float lambda_high;
	int power_num;
	int power_den;
	FieldType field_type;
	Float error;
	Float norm;
	Float residue[MAX_RAT_DEGREE];
	Float pole[MAX_RAT_DEGREE];
	Float norm_inv;
	Float residue_inv[MAX_RAT_DEGREE];
	Float pole_inv[MAX_RAT_DEGREE];
	long precision;
	Float delta_m;
	   RemezArg (  ) ;
};

class VML;
class RationalQuotientRemezArg {
public:
	 bool Encode(char *filename,char *instance);
	 bool Decode(char *filename,char *instance);
	 bool Vml(VML *vmls,char *instance);
	struct {
		u_int bsn_md_len;
		RemezArg *bsn_md_val;
	} bsn_md;
	struct {
		u_int bsn_mc_len;
		RemezArg *bsn_mc_val;
	} bsn_mc;
	struct {
		u_int frm_md_len;
		RemezArg *frm_md_val;
	} frm_md;
	struct {
		u_int frm_mc_len;
		RemezArg *frm_mc_val;
	} frm_mc;
};

/* the xdr functions */

#ifdef __cplusplus
extern "C" {
#endif

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t vml_RemezArg (VML *, char *instance, RemezArg*);
extern  bool_t vml_RationalQuotientRemezArg (VML *, char *instance, RationalQuotientRemezArg*);

#else /* K&R C */
extern  bool_t vml_RemezArg (VML *, char *instance, RemezArg*);
extern  bool_t vml_RationalQuotientRemezArg (VML *, char *instance, RationalQuotientRemezArg*);

#endif /* K&R C */

#ifdef __cplusplus
}
#endif
CPS_END_NAMESPACE

#endif /* !_REMEZ_ARG_H_RPCGEN */
