/*
 * Please do not edit this file.
 * It was generated using PAB's VML system.
 */

#ifndef _PBP_ARG_H_RPCGEN
#define _PBP_ARG_H_RPCGEN

#include <config.h>
#include <util/vml/types.h>
#include <util/vml/vml.h>
#include <util/enum.h>
#include <util/defines.h>
CPS_START_NAMESPACE

enum PBP_LIM {
	MAX_PBP_MASSES = 100,
};
typedef enum PBP_LIM PBP_LIM;
extern struct vml_enum_map PBP_LIM_map[];

class VML;
class PbpArg {
public:
	 bool Encode(char *filename,char *instance);
	 bool Decode(char *filename,char *instance);
	 bool Vml(VML *vmls,char *instance);
	PatternType pattern_kind;
	int n_masses;
	Float mass_start;
	Float mass_step;
	Float mass[MAX_PBP_MASSES];
	int max_num_iter;
	Float stop_rsd;
	int src_u_s;
	int src_l_s;
	int snk_u_s;
	int snk_l_s;
	int snk_loop;
};

/* the xdr functions */

#ifdef __cplusplus
extern "C" {
#endif

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t vml_PBP_LIM (VML *, char *instance, PBP_LIM*);
extern  bool_t vml_PbpArg (VML *, char *instance, PbpArg*);

#else /* K&R C */
extern  bool_t vml_PBP_LIM (VML *, char *instance, PBP_LIM*);
extern  bool_t vml_PbpArg (VML *, char *instance, PbpArg*);

#endif /* K&R C */

#ifdef __cplusplus
}
#endif
CPS_END_NAMESPACE

#endif /* !_PBP_ARG_H_RPCGEN */
