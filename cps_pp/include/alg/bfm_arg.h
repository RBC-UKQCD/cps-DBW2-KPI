/*
 * Please do not edit this file.
 * It was generated using PAB's VML system.
 */

#ifndef _BFM_ARG_H_RPCGEN
#define _BFM_ARG_H_RPCGEN

#include <config.h>
#include <util/vml/types.h>
#include <util/vml/vml.h>
#include <util/enum.h>
#include <util/defines.h>
CPS_START_NAMESPACE

class VML;
class BfmArg {
public:
	 bool Encode(char *filename,char *instance);
	 bool Decode(char *filename,char *instance);
	 bool Vml(VML *vmls,char *instance);
	BfmSolverType solver;
	int solveMobiusDminus;
	int Ls;
	Float M5;
	Float mass;
	Float twistedmass;
	Float Csw;
	Float zolo_delta;
	Float zolo_lo;
	Float zolo_hi;
	int list_engine;
	int list_length;
	int powerloop;
	int time_report_iter;
	int max_iter;
	Float residual;
	int precon_5d;
	int reproduce;
	int reproduce_checksum;
	int reproduce_master_check;
	int threads;
	int verbose;
	int onepluskappanorm;
	Float mobius_scale;
};

/* the xdr functions */

#ifdef __cplusplus
extern "C" {
#endif

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t vml_BfmArg (VML *, char *instance, BfmArg*);

#else /* K&R C */
extern  bool_t vml_BfmArg (VML *, char *instance, BfmArg*);

#endif /* K&R C */

#ifdef __cplusplus
}
#endif
CPS_END_NAMESPACE

#endif /* !_BFM_ARG_H_RPCGEN */
